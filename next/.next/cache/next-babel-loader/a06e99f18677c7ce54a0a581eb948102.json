{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport { deflateRawSync } from 'zlib';\n\nfunction App(_ref) {\n  var postList = _ref.postList,\n      tags = _ref.tags,\n      auth = _ref.auth;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState('normal'),\n      feed = _useState2[0],\n      setFeed = _useState2[1];\n\n  useEffect(function () {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  var getPostByTag = function getPostByTag(tag) {\n    return _regeneratorRuntime.async(function getPostByTag$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/\".concat(tag)).then(function (data) {\n              setPosts(data.data);\n              setFeed('tags');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var searchPosts = function searchPosts(term) {\n    return _regeneratorRuntime.async(function searchPosts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/search/\".concat(term)).then(function (data) {\n              setPosts(data.data);\n              setFeed('search');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addToList = function addToList(user, post) {\n    var userObj;\n    return _regeneratorRuntime.async(function addToList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(user.nickname, post);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (data) {\n              if (data.name) {} else {}\n            }));\n\n          case 3:\n            userObj = _context3.sent;\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createUser = function createUser(name) {\n    return _regeneratorRuntime.async(function createUser$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    addToList: addToList,\n    searchPosts: searchPosts,\n    feedState: feed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = function _callee(ctx) {\n  var res, tags;\n  return _regeneratorRuntime.async(function _callee$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context5.sent;\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/tags'));\n\n        case 5:\n          tags = _context5.sent;\n          return _context5.abrupt(\"return\", {\n            postList: res.data,\n            tags: tags.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","useState","useEffect","axios","Dashboard","deflateRawSync","App","postList","tags","auth","posts","setPosts","feed","setFeed","getPostByTag","tag","get","then","data","searchPosts","term","addToList","user","post","console","log","nickname","name","userObj","createUser","getInitialProps","ctx","res"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport { deflateRawSync } from 'zlib';\n\n\nfunction App({ postList, tags, auth }) {\n\n  const [posts, setPosts] = useState([]);\n  const [feed, setFeed] = useState('normal');\n\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async(tag) => {\n    await axios.get(`http://localhost:3001/posts/${tag}`)\n    .then(\n      (data) => {\n        setPosts(data.data);\n        setFeed('tags');\n      } \n      )\n  }\n\n  const searchPosts = async(term) => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`)\n    .then((data) => {\n      setPosts(data.data)\n      setFeed('search');\n    })\n  }\n\n  const addToList = async(user, post) => {\n\n    console.log(user.nickname, post);\n    const userObj = await axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((data) => {\n\n      if(data.name){}\n      \n      else{\n       \n      }\n    })\n\n  }\n\n  const createUser = async(name) => {\n    \n\n  }\n\n  return (\n    <div className=\"app_body\">\n     \n      <Dashboard posts={posts} \n                  tags={tags} \n                  getPostByTag={getPostByTag} \n                  addToList={addToList}\n                  searchPosts={searchPosts}\n                  feedState={feed}/>\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}