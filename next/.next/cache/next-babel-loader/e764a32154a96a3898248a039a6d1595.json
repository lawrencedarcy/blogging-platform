{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/login.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\n\nfunction Login() {\n  // these values are hardcoded since our main.go api only accepts this auth combo\n  var initialValues = {\n    email: \"rickety_cricket@example.com\",\n    password: \"shhh!\"\n  };\n\n  var _useState = useState(initialValues),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            alert(\"TODO add login endpoint! \".concat(JSON.stringify(inputs)));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    e.persist();\n    setInputs(_objectSpread({}, inputs, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    value: inputs.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    value: inputs.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Login\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/login.tsx"],"names":["React","useState","Login","initialValues","email","password","inputs","setInputs","handleSubmit","e","preventDefault","alert","JSON","stringify","handleInputChange","persist","target","name","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AASA,SAASC,KAAT,GAAiB;AACf;AACA,MAAMC,aAA0B,GAAG;AACjCC,IAAAA,KAAK,EAAE,6BAD0B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAnC;;AAFe,kBAOaJ,QAAQ,CAACE,aAAD,CAPrB;AAAA,MAORG,MAPQ;AAAA,MAOAC,SAPA;;AASf,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,YAAAA,CAAC,CAACC,cAAF;AACAC,YAAAA,KAAK,oCAA6BC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAA7B,EAAL;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAKA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACL,CAAD,EAA+B;AACvDA,IAAAA,CAAC,CAACM,OAAF;AACAR,IAAAA,SAAS,mBACJD,MADI,sBAENG,CAAC,CAACO,MAAF,CAASC,IAFH,EAEUR,CAAC,CAACO,MAAF,CAASE,KAFnB,GAAT;AAID,GAND;;AAQA,SAAO,4BAEL;AAAM,IAAA,QAAQ,EAAEV,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AACO,IAAA,EAAE,EAAC,OADV;AAEO,IAAA,IAAI,EAAC,OAFZ;AAGO,IAAA,QAAQ,EAAEM,iBAHjB;AAIO,IAAA,KAAK,EAAER,MAAM,CAACF,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AACO,IAAA,EAAE,EAAC,UADV;AAEO,IAAA,IAAI,EAAC,UAFZ;AAGO,IAAA,QAAQ,EAAEU,iBAHjB;AAIO,IAAA,KAAK,EAAER,MAAM,CAACD,QAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAmBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CAFK,CAAP;AAwBD;;AAED,eAAeH,KAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { postLogin } from \"../services/rest_service\";\n\nexport type LoginInputs = {\n  email: string\n  password: string\n}\n\nfunction Login() {\n  // these values are hardcoded since our main.go api only accepts this auth combo\n  const initialValues: LoginInputs = { \n    email: \"rickety_cricket@example.com\", \n    password: \"shhh!\", \n  };\n\n  const [inputs, setInputs] = useState(initialValues);\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    alert(`TODO add login endpoint! ${JSON.stringify(inputs)}`)\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<any>) => {\n    e.persist();\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return <>\n    \n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"email\"\n               id=\"email\"\n               name=\"email\"\n               onChange={handleInputChange}\n               value={inputs.email}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\"\n               id=\"password\"\n               name=\"password\"\n               onChange={handleInputChange}\n               value={inputs.password}\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  </>;\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}