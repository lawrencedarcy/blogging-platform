{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nfunction App(_ref) {\n  var postList = _ref.postList,\n      tags = _ref.tags,\n      auth = _ref.auth;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState('normal'),\n      feed = _useState2[0],\n      setFeed = _useState2[1];\n\n  useEffect(function () {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  var getPostByTag = function getPostByTag(tag) {\n    return _regeneratorRuntime.async(function getPostByTag$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/\".concat(tag)).then(function (data) {\n              setPosts(data.data);\n              setFeed('tags');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var searchPosts = function searchPosts(term) {\n    return _regeneratorRuntime.async(function searchPosts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/search/\".concat(term)).then(function (data) {\n              setPosts(data.data);\n              setFeed('search');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addToList = function addToList(user, postId) {\n    return _regeneratorRuntime.async(function addToList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              if (res.data[0]) {\n                axios.put(\"http://localhost:3001/users/\".concat(user.nickname), {\n                  reading: postId\n                });\n              } else {\n                createUser(user.nickname, postId);\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createUser = function createUser(name, postId) {\n    return _regeneratorRuntime.async(function createUser$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:3001/users\", {\n              name: name,\n              reading: postId\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getReadingList = function getReadingList(user) {\n    return _regeneratorRuntime.async(function getReadingList$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log('getting reading lsit');\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              if (res.data[0]) {\n                var list = res.data[0].reading;\n                console.log(list);\n                listHelper(list);\n              }\n            }));\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }; //part of get reading list and delete from list\n\n\n  var listHelper = function listHelper(list) {\n    return _regeneratorRuntime.async(function listHelper$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/list\", {\n              params: {\n                list: list\n              }\n            }).then(function (res) {\n              setPosts(res.data);\n              setFeed('list');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteFromList = function deleteFromList(user, postid) {\n    return _regeneratorRuntime.async(function deleteFromList$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(axios.put(\"http://localhost:3001/list/\".concat(user.nickname), {\n              reading: postid\n            }).then(function (res) {\n              var list = res.data.reading;\n              listHelper(list);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkReadingList = function checkReadingList(user, postId) {\n    return _regeneratorRuntime.async(function checkReadingList$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              if (res.data[0]) {\n                var list = res.data[0].reading;\n                return list.includes(postId) ? true : false;\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    addToList: addToList,\n    searchPosts: searchPosts,\n    feedState: feed,\n    getReadingList: getReadingList,\n    deleteFromList: deleteFromList,\n    checkReadingList: checkReadingList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = function _callee(ctx) {\n  var res, tags;\n  return _regeneratorRuntime.async(function _callee$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context9.sent;\n          _context9.next = 5;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/tags'));\n\n        case 5:\n          tags = _context9.sent;\n          return _context9.abrupt(\"return\", {\n            postList: res.data,\n            tags: tags.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","useState","useEffect","axios","Dashboard","App","postList","tags","auth","posts","setPosts","feed","setFeed","getPostByTag","tag","get","then","data","searchPosts","term","addToList","user","postId","nickname","res","put","reading","createUser","name","post","getReadingList","console","log","list","listHelper","params","deleteFromList","postid","checkReadingList","includes","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nfunction App({ postList, tags, auth }) {\n  const [posts, setPosts] = useState([]);\n  const [feed, setFeed] = useState('normal');\n\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async tag => {\n    await axios.get(`http://localhost:3001/posts/${tag}`).then(data => {\n      setPosts(data.data);\n      setFeed('tags');\n    });\n  };\n\n  const searchPosts = async term => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`).then(data => {\n      setPosts(data.data);\n      setFeed('search');\n    });\n  };\n\n  const addToList = async (user, postId) => {\n    await axios\n      .get(`http://localhost:3001/users/${user.nickname}`)\n      .then(res => {\n        if (res.data[0]) {\n          axios.put(`http://localhost:3001/users/${user.nickname}`, {\n            reading: postId\n          });\n        } else {\n          createUser(user.nickname, postId);\n        }\n      });\n  };\n\n  const createUser = async (name, postId) => {\n    await axios.post(`http://localhost:3001/users`, {\n      name: name,\n      reading: postId\n    });\n  };\n\n  const getReadingList = async user => {\n    console.log('getting reading lsit');\n    await axios\n      .get(`http://localhost:3001/users/${user.nickname}`)\n      .then(res => {\n        if(res.data[0]){\n        const list = res.data[0].reading;\n        console.log(list);\n        listHelper(list);}\n      });\n  };\n  //part of get reading list and delete from list\n  const listHelper = async list => {\n    await axios\n      .get(`http://localhost:3001/list`, { params: { list: list } })\n      .then(res => {\n        setPosts(res.data);\n        setFeed('list');\n      });\n  };\n\n  const deleteFromList = async (user, postid) => {\n    await axios\n      .put(`http://localhost:3001/list/${user.nickname}`, { reading: postid })\n      .then(res => {\n        const list = res.data.reading;\n        listHelper(list);\n      });\n  };\n\n  const checkReadingList = async (user, postId) => {\n    return axios\n      .get(`http://localhost:3001/users/${user.nickname}`)\n      .then(res => {\n        if (res.data[0]) {\n          const list = res.data[0].reading;\n          return list.includes(postId) ? true : false;\n        }\n      });\n  };\n\n  return (\n    <div className='app_body'>\n      <Dashboard\n        posts={posts}\n        tags={tags}\n        getPostByTag={getPostByTag}\n        addToList={addToList}\n        searchPosts={searchPosts}\n        feedState={feed}\n        getReadingList={getReadingList}\n        deleteFromList={deleteFromList}\n        checkReadingList={checkReadingList}\n      />\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}