{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nfunction App({\n  postList,\n  tags,\n  auth\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: feed,\n    1: setFeed\n  } = useState('normal');\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async tag => {\n    await axios.get(`http://localhost:3001/posts/${tag}`).then(data => {\n      setPosts(data.data);\n      setFeed('tags');\n    });\n  };\n\n  const searchPosts = async term => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`).then(data => {\n      setPosts(data.data);\n      setFeed('search');\n    });\n  };\n\n  const addToList = async (user, post) => {\n    console.log(user.nickname, post);\n    await axios.get(`http://localhost:3001/users/${user.nickname}`).then(res => {\n      if (res.data[0]) {\n        axios.put(`http://localhost:3001/users/${user.nickname}`, {\n          reading: post\n        });\n      } else {\n        createUser(user.nickname, post);\n      }\n    });\n  };\n\n  const addUserPost = async (user, postId) => {\n    console.log(user.nickname, post);\n    await axios.get(`http://localhost:3001/users/${user.nickname}`).then(res => {\n      if (res.data[0]) {\n        axios.put(`http://localhost:3001/users/${user.nickname}`, {\n          reading: post\n        });\n      } else {\n        createUser(user.nickname, post);\n      }\n    });\n  };\n\n  const createUser = async (name, post) => {\n    await axios.post(`http://localhost:3001/users`, {\n      name: name,\n      reading: post\n    });\n  };\n\n  const getReadingList = async user => {\n    await axios.get(`http://localhost:3001/users/${user.nickname}`).then(res => {\n      const list = res.data[0].reading;\n      listHelper(list);\n    });\n  }; //part of get reading list and delete from list\n\n\n  const listHelper = async list => {\n    await axios.get(`http://localhost:3001/list`, {\n      params: {\n        list: list\n      }\n    }).then(res => {\n      setPosts(res.data);\n      setFeed('list');\n    });\n  };\n\n  const deleteFromList = async (user, postid) => {\n    await axios.put(`http://localhost:3001/list/${user.nickname}`, {\n      reading: postid\n    }).then(res => {\n      const list = res.data.reading;\n      listHelper(list);\n    });\n  };\n\n  const checkReadingList = async (user, postId) => {\n    return axios.get(`http://localhost:3001/users/${user.nickname}`).then(res => {\n      const list = res.data[0].reading;\n      console.log('checked the list!', list.includes(postId) ? true : false);\n      return list.includes(postId) ? true : false;\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    addToList: addToList,\n    searchPosts: searchPosts,\n    feedState: feed,\n    getReadingList: getReadingList,\n    deleteFromList: deleteFromList,\n    checkReadingList: checkReadingList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return {\n    postList: res.data,\n    tags: tags.data\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","useState","useEffect","axios","Dashboard","App","postList","tags","auth","posts","setPosts","feed","setFeed","getPostByTag","tag","get","then","data","searchPosts","term","addToList","user","post","console","log","nickname","res","put","reading","createUser","addUserPost","postId","name","getReadingList","list","listHelper","params","deleteFromList","postid","checkReadingList","includes","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\n\nfunction App({ postList, tags, auth }) {\n\n  const [posts, setPosts] = useState([]);\n  const [feed, setFeed] = useState('normal');\n\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async(tag) => {\n    await axios.get(`http://localhost:3001/posts/${tag}`)\n    .then(\n      (data) => {\n        setPosts(data.data);\n        setFeed('tags');\n      } \n      )\n  }\n\n  const searchPosts = async(term) => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`)\n    .then((data) => {\n      setPosts(data.data)\n      setFeed('search');\n    })\n  }\n\n  const addToList = async(user, post) => {\n    console.log(user.nickname, post);\n    await axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((res) => {\n      if(res.data[0]){\n        axios.put(`http://localhost:3001/users/${user.nickname}`, {reading: post});\n      }\n      else{\n       createUser(user.nickname, post)\n      }\n    })\n  }\n  const addUserPost = async(user, postId) => {\n    console.log(user.nickname, post);\n    await axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((res) => {\n      if(res.data[0]){\n        axios.put(`http://localhost:3001/users/${user.nickname}`, {reading: post});\n      }\n      else{\n       createUser(user.nickname, post)\n      }\n    })\n  }\n\n\n  const createUser = async(name, post) => {\n    await axios.post(`http://localhost:3001/users`, {name: name, reading: post})\n  }\n\n  const getReadingList = async(user) => {\n    await axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((res) => {\n      const list = res.data[0].reading;\n      listHelper(list);\n    })\n  }\n //part of get reading list and delete from list\n  const listHelper = async(list) => {\n    await axios.get(`http://localhost:3001/list`, { params: {list: list}})\n    .then((res) => {\n      setPosts(res.data);\n      setFeed('list');\n    });\n  }\n\n  const deleteFromList = async(user, postid) => {\n   await axios.put(`http://localhost:3001/list/${user.nickname}`, {reading: postid})\n   .then(res =>  {\n     const list = res.data.reading;\n    listHelper(list); \n   });\n  }\n\n  const checkReadingList = async(user, postId) => {\n    return axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((res) => {\n      const list = res.data[0].reading;\n      console.log('checked the list!', list.includes(postId) ? true : false);\n      return list.includes(postId) ? true : false;\n    })\n  }\n\n  return (\n    <div className=\"app_body\">\n     \n      <Dashboard posts={posts} \n                  tags={tags} \n                  getPostByTag={getPostByTag} \n                  addToList={addToList}\n                  searchPosts={searchPosts}\n                  feedState={feed}\n                  getReadingList={getReadingList}\n                  deleteFromList={deleteFromList}\n                  checkReadingList={checkReadingList}\n                  />\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}