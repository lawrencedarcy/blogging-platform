{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nfunction App(_ref) {\n  var postList = _ref.postList,\n      tags = _ref.tags,\n      auth = _ref.auth;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState('normal'),\n      feed = _useState2[0],\n      setFeed = _useState2[1];\n\n  useEffect(function () {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  var getPostByTag = function getPostByTag(tag) {\n    return _regeneratorRuntime.async(function getPostByTag$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/\".concat(tag)).then(function (data) {\n              setPosts(data.data);\n              setFeed('tags');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var searchPosts = function searchPosts(term) {\n    return _regeneratorRuntime.async(function searchPosts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/search/\".concat(term)).then(function (data) {\n              setPosts(data.data);\n              setFeed('search');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addToList = function addToList(user, postId) {\n    return _regeneratorRuntime.async(function addToList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              if (res.data[0]) {\n                axios.put(\"http://localhost:3001/users/\".concat(user.nickname), {\n                  reading: postId\n                });\n              } else {\n                createUser(user.nickname, postId);\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addToPosts = function addToPosts(user, postId) {\n    return _regeneratorRuntime.async(function addToPosts$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              if (res.data[0]) {\n                axios.put(\"http://localhost:3001/users/\".concat(user.nickname), {\n                  posts: postId\n                });\n              } else {\n                createUser(user.nickname, postId);\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createUser = function createUser(name, postId) {\n    return _regeneratorRuntime.async(function createUser$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:3001/users\", {\n              name: name,\n              reading: postId\n            }));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getReadingList = function getReadingList(user) {\n    return _regeneratorRuntime.async(function getReadingList$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log('getting reading lsit');\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              var list = res.data[0].reading;\n              console.log(list);\n              listHelper(list);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }; //part of get reading list and delete from list\n\n\n  var listHelper = function listHelper(list) {\n    return _regeneratorRuntime.async(function listHelper$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/list\", {\n              params: {\n                list: list\n              }\n            }).then(function (res) {\n              setPosts(res.data);\n              setFeed('list');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteFromList = function deleteFromList(user, postid) {\n    return _regeneratorRuntime.async(function deleteFromList$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _regeneratorRuntime.awrap(axios.put(\"http://localhost:3001/list/\".concat(user.nickname), {\n              reading: postid\n            }).then(function (res) {\n              var list = res.data.reading;\n              listHelper(list);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkReadingList = function checkReadingList(user, postId) {\n    return _regeneratorRuntime.async(function checkReadingList$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            return _context9.abrupt(\"return\", axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              var list = res.data[0].reading;\n              return list.includes(postId) ? true : false;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    addToList: addToList,\n    searchPosts: searchPosts,\n    feedState: feed,\n    getReadingList: getReadingList,\n    deleteFromList: deleteFromList,\n    checkReadingList: checkReadingList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = function _callee(ctx) {\n  var res, tags;\n  return _regeneratorRuntime.async(function _callee$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context10.sent;\n          _context10.next = 5;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/tags'));\n\n        case 5:\n          tags = _context10.sent;\n          return _context10.abrupt(\"return\", {\n            postList: res.data,\n            tags: tags.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","useState","useEffect","axios","Dashboard","App","postList","tags","auth","posts","setPosts","feed","setFeed","getPostByTag","tag","get","then","data","searchPosts","term","addToList","user","postId","nickname","res","put","reading","createUser","addToPosts","name","post","getReadingList","console","log","list","listHelper","params","deleteFromList","postid","checkReadingList","includes","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\n\nfunction App({ postList, tags, auth }) {\n\n  const [posts, setPosts] = useState([]);\n  const [feed, setFeed] = useState('normal');\n\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async(tag) => {\n    await axios.get(`http://localhost:3001/posts/${tag}`)\n    .then(\n      (data) => {\n        setPosts(data.data);\n        setFeed('tags');\n      } \n      )\n  }\n\n  const searchPosts = async(term) => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`)\n    .then((data) => {\n      setPosts(data.data)\n      setFeed('search');\n    })\n  }\n\n  const addToList = async(user, postId) => {\n    await axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((res) => {\n    \n      if(res.data[0]){\n        axios.put(`http://localhost:3001/users/${user.nickname}`, {reading: postId});\n      }\n      else{\n       createUser(user.nickname, postId)\n      }\n    })\n  }\n\n  const addToPosts = async(user, postId) => {\n    await axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((res) => {\n    \n      if(res.data[0]){\n        axios.put(`http://localhost:3001/users/${user.nickname}`, {posts: postId});\n      }\n      else{\n       createUser(user.nickname, postId)\n      }\n    })\n  }\n\n\n\n  const createUser = async(name, postId) => {\n    await axios.post(`http://localhost:3001/users`, {name: name, reading: postId})\n  }\n\n  const getReadingList = async(user) => {\n    console.log('getting reading lsit')\n    await axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((res) => {\n      \n      const list = res.data[0].reading;\n      console.log(list);\n      listHelper(list);\n    })\n  }\n //part of get reading list and delete from list\n  const listHelper = async(list) => {\n    await axios.get(`http://localhost:3001/list`, { params: {list: list}})\n    .then((res) => {\n      setPosts(res.data);\n      setFeed('list');\n    });\n  }\n\n  const deleteFromList = async(user, postid) => {\n   await axios.put(`http://localhost:3001/list/${user.nickname}`, {reading: postid})\n   .then(res =>  {\n     const list = res.data.reading;\n    listHelper(list); \n   });\n  }\n\n  const checkReadingList = async(user, postId) => {\n    return axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((res) => {\n      const list = res.data[0].reading;\n      return list.includes(postId) ? true : false;\n    })\n  }\n\n  return (\n    <div className=\"app_body\">\n     \n      <Dashboard posts={posts} \n                  tags={tags} \n                  getPostByTag={getPostByTag} \n                  addToList={addToList}\n                  searchPosts={searchPosts}\n                  feedState={feed}\n                  getReadingList={getReadingList}\n                  deleteFromList={deleteFromList}\n                  checkReadingList={checkReadingList}\n                  />\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}