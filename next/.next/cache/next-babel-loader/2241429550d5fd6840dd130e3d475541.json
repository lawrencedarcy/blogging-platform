{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar/NavBar';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Create from './write';\nimport Post from './post';\n\nfunction App(_ref) {\n  var postList = _ref.postList,\n      tags = _ref.tags;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    setPosts(postList);\n  }, []);\n\n  var findPost = function findPost(url) {\n    var res = posts.filter(function (post) {\n      return post.title && post.title.replace(/\\s/g, '-').toLowerCase() === url;\n    });\n    console.log('foundpost', res[0]);\n    return res[0];\n  };\n\n  var getPostByTag = function getPostByTag(tag) {\n    var res;\n    return _regeneratorRuntime.async(function getPostByTag$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/\".concat(tag)).then(function (data) {\n              return setPosts(data.data);\n            }));\n\n          case 2:\n            res = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = function _callee(ctx) {\n  var res, tags;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/tags'));\n\n        case 5:\n          tags = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            postList: res.data,\n            tags: tags.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","useState","useEffect","axios","NavBar","Dashboard","Create","Post","App","postList","tags","posts","setPosts","findPost","url","res","filter","post","title","replace","toLowerCase","console","log","getPostByTag","tag","get","then","data","getInitialProps","ctx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,SAASC,GAAT,OAAiC;AAAA,MAAlBC,QAAkB,QAAlBA,QAAkB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBAELT,QAAQ,CAAC,EAAD,CAFH;AAAA,MAExBU,KAFwB;AAAA,MAEjBC,QAFiB;;AAI/BV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAACH,QAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG,EAAI;AACtB,QAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CACV,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,EAA+BC,WAA/B,OAAiDN,GAAnE;AAAA,KADM,CAAZ;AAGAO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,GAAG,CAAC,CAAD,CAA5B;AACA,WAAOA,GAAG,CAAC,CAAD,CAAV;AACD,GAND;;AAQA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACDrB,KAAK,CAACsB,GAAN,uCAAyCD,GAAzC,GACjBE,IADiB,CACZ,UAACC,IAAD;AAAA,qBAAUf,QAAQ,CAACe,IAAI,CAACA,IAAN,CAAlB;AAAA,aADY,CADC;;AAAA;AACbZ,YAAAA,GADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,KAAlB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAqC,IAAA,YAAY,EAAEa,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAEDf,GAAG,CAACoB,eAAJ,GAAsB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACF1B,KAAK,CAACsB,GAAN,CAAU,6BAAV,CADE;;AAAA;AACdV,UAAAA,GADc;AAAA;AAAA,2CAEDZ,KAAK,CAACsB,GAAN,CAAU,4BAAV,CAFC;;AAAA;AAEdf,UAAAA,IAFc;AAAA,4CAGb;AAAED,YAAAA,QAAQ,EAAEM,GAAG,CAACY,IAAhB;AAAsBjB,YAAAA,IAAI,EAAEA,IAAI,CAACiB;AAAjC,WAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAMA,eAAenB,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar/NavBar';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Create from './write';\nimport Post from './post';\n\n\nfunction App({ postList, tags }) {\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    setPosts(postList);\n  }, []);\n\n  const findPost = url => {\n    const res = posts.filter(\n      post => post.title && post.title.replace(/\\s/g, '-').toLowerCase() === url\n    );\n    console.log('foundpost', res[0]);\n    return res[0];\n  };\n\n  const getPostByTag = async(tag) => {\n    const res = await axios.get(`http://localhost:3001/posts/${tag}`)\n    .then((data) => setPosts(data.data))\n  }\n\n\n\n  return (\n    <div className=\"app_body\">\n     \n      <Dashboard posts={posts} tags={tags} getPostByTag={getPostByTag}/>\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}