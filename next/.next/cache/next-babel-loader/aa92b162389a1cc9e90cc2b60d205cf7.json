{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Footer from '../../components/Article/Footer/Footer';\nimport axios from 'axios';\nimport { Markup } from 'interweave';\nimport { DiscussionEmbed } from 'disqus-react';\n\nfunction Post(_ref) {\n  var post = _ref.post;\n\n  var upVote = function upVote(id) {\n    axios.put(\"http://localhost:3001/posts/\".concat(id, \"/up\")).then(function (res) {\n      console.log(res.data);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"whitespace\"\n  }), __jsx(\"div\", {\n    className: \"body_wrapper\"\n  }, __jsx(\"div\", {\n    className: \"article_title\"\n  }, post.title), __jsx(\"div\", {\n    className: \"article_author\"\n  }, post.author), __jsx(\"div\", {\n    className: \"article_tags\"\n  }, post.tags.slice(0, 3).map(function (tag) {\n    return __jsx(\"div\", {\n      className: \"article_tag\"\n    }, \"#\", tag);\n  })), __jsx(\"div\", {\n    className: \"article_body\"\n  }, __jsx(Markup, {\n    content: post.body\n  }), __jsx(\"div\", {\n    className: \"article_disqus\",\n    id: \"disqus\"\n  }, __jsx(DiscussionEmbed, {\n    shortname: \"stagetime\",\n    config: ({\n      url: post.id\n    }, {\n      identifier: post.id\n    }, {\n      title: post.title\n    })\n  }))), __jsx(Footer, {\n    upVote: upVote,\n    post: post\n  })));\n}\n\nPost.getInitialProps = function _callee(_ref2) {\n  var query, res, result;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/post/\".concat(query.id)));\n\n        case 3:\n          res = _context.sent;\n          result = res.data;\n          console.log(result);\n          return _context.abrupt(\"return\", {\n            post: result\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}