{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport { deflateRawSync } from 'zlib';\n\nfunction App({\n  postList,\n  tags,\n  auth\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: feed,\n    1: setFeed\n  } = useState('normal');\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async tag => {\n    await axios.get(`http://localhost:3001/posts/${tag}`).then(data => {\n      setPosts(data.data);\n      setFeed('tags');\n    });\n  };\n\n  const searchPosts = async term => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`).then(data => {\n      setPosts(data.data);\n      setFeed('search');\n    });\n  };\n\n  const addToList = async (user, post) => {\n    console.log(user.nickname, post);\n    const userObj = await axios.get(`http://localhost:3001/users/${user.nickname}`).then(data => {\n      if (data.name) {} else {}\n    });\n  };\n\n  const createUser = async name => {};\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    addToList: addToList,\n    searchPosts: searchPosts,\n    feedState: feed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return {\n    postList: res.data,\n    tags: tags.data\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","useState","useEffect","axios","Dashboard","deflateRawSync","App","postList","tags","auth","posts","setPosts","feed","setFeed","getPostByTag","tag","get","then","data","searchPosts","term","addToList","user","post","console","log","nickname","userObj","name","createUser","getInitialProps","ctx","res"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,cAAT,QAA+B,MAA/B;;AAGA,SAASC,GAAT,CAAa;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAb,EAAuC;AAErC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACW,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,QAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACJ,QAAD,CAAR;AACAM,IAAAA,OAAO,CAAC,QAAD,CAAP;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,YAAY,GAAG,MAAMC,GAAN,IAAc;AACjC,UAAMZ,KAAK,CAACa,GAAN,CAAW,+BAA8BD,GAAI,EAA7C,EACLE,IADK,CAEHC,IAAD,IAAU;AACRP,MAAAA,QAAQ,CAACO,IAAI,CAACA,IAAN,CAAR;AACAL,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD,KALG,CAAN;AAOD,GARD;;AAUA,QAAMM,WAAW,GAAG,MAAMC,IAAN,IAAe;AACjC,UAAMjB,KAAK,CAACa,GAAN,CAAW,sCAAqCI,IAAK,EAArD,EACLH,IADK,CACCC,IAAD,IAAU;AACdP,MAAAA,QAAQ,CAACO,IAAI,CAACA,IAAN,CAAR;AACAL,MAAAA,OAAO,CAAC,QAAD,CAAP;AACD,KAJK,CAAN;AAKD,GAND;;AAQA,QAAMQ,SAAS,GAAG,OAAMC,IAAN,EAAYC,IAAZ,KAAqB;AAErCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,QAAjB,EAA2BH,IAA3B;AACA,UAAMI,OAAO,GAAG,MAAMxB,KAAK,CAACa,GAAN,CAAW,+BAA8BM,IAAI,CAACI,QAAS,EAAvD,EACrBT,IADqB,CACfC,IAAD,IAAU;AAEd,UAAGA,IAAI,CAACU,IAAR,EAAa,CAAE,CAAf,MAEI,CAEH;AACF,KARqB,CAAtB;AAUD,GAbD;;AAeA,QAAMC,UAAU,GAAG,MAAMD,IAAN,IAAe,CAGjC,CAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAElB,KAAlB;AACY,IAAA,IAAI,EAAEF,IADlB;AAEY,IAAA,YAAY,EAAEM,YAF1B;AAGY,IAAA,SAAS,EAAEO,SAHvB;AAIY,IAAA,WAAW,EAAEF,WAJzB;AAKY,IAAA,SAAS,EAAEP,IALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD;;AAEDN,GAAG,CAACwB,eAAJ,GAAsB,MAAMC,GAAN,IAAa;AACjC,QAAMC,GAAG,GAAG,MAAM7B,KAAK,CAACa,GAAN,CAAU,6BAAV,CAAlB;AACA,QAAMR,IAAI,GAAG,MAAML,KAAK,CAACa,GAAN,CAAU,4BAAV,CAAnB;AACA,SAAO;AAAET,IAAAA,QAAQ,EAAEyB,GAAG,CAACd,IAAhB;AAAsBV,IAAAA,IAAI,EAAEA,IAAI,CAACU;AAAjC,GAAP;AACD,CAJD;;AAMA,eAAeZ,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport { deflateRawSync } from 'zlib';\n\n\nfunction App({ postList, tags, auth }) {\n\n  const [posts, setPosts] = useState([]);\n  const [feed, setFeed] = useState('normal');\n\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async(tag) => {\n    await axios.get(`http://localhost:3001/posts/${tag}`)\n    .then(\n      (data) => {\n        setPosts(data.data);\n        setFeed('tags');\n      } \n      )\n  }\n\n  const searchPosts = async(term) => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`)\n    .then((data) => {\n      setPosts(data.data)\n      setFeed('search');\n    })\n  }\n\n  const addToList = async(user, post) => {\n\n    console.log(user.nickname, post);\n    const userObj = await axios.get(`http://localhost:3001/users/${user.nickname}`)\n    .then((data) => {\n\n      if(data.name){}\n      \n      else{\n       \n      }\n    })\n\n  }\n\n  const createUser = async(name) => {\n    \n\n  }\n\n  return (\n    <div className=\"app_body\">\n     \n      <Dashboard posts={posts} \n                  tags={tags} \n                  getPostByTag={getPostByTag} \n                  addToList={addToList}\n                  searchPosts={searchPosts}\n                  feedState={feed}/>\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}