{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar/NavBar';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Create from './write';\nimport Post from './post';\n\nfunction App(_ref) {\n  var postList = _ref.postList,\n      tags = _ref.tags,\n      auth = _ref.auth;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    setPosts(postList);\n  }, []);\n\n  var getPostByTag = function getPostByTag(tag) {\n    var res;\n    return _regeneratorRuntime.async(function getPostByTag$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/\".concat(tag)).then(function (data) {\n              return setPosts(data.data);\n            }));\n\n          case 2:\n            res = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = function _callee(ctx) {\n  var res, tags;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/tags'));\n\n        case 5:\n          tags = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            postList: res.data,\n            tags: tags.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","useState","useEffect","axios","NavBar","Dashboard","Create","Post","App","postList","tags","auth","posts","setPosts","getPostByTag","tag","get","then","data","res","getInitialProps","ctx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,SAASC,GAAT,OAAuC;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBAEXV,QAAQ,CAAC,EAAD,CAFG;AAAA,MAE9BW,KAF8B;AAAA,MAEvBC,QAFuB;;AAKrCX,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAACJ,QAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACDZ,KAAK,CAACa,GAAN,uCAAyCD,GAAzC,GACjBE,IADiB,CACZ,UAACC,IAAD;AAAA,qBAAUL,QAAQ,CAACK,IAAI,CAACA,IAAN,CAAlB;AAAA,aADY,CADC;;AAAA;AACbC,YAAAA,GADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEP,KAAlB;AAAyB,IAAA,IAAI,EAAEF,IAA/B;AAAqC,IAAA,YAAY,EAAEI,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAEDN,GAAG,CAACY,eAAJ,GAAsB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFlB,KAAK,CAACa,GAAN,CAAU,6BAAV,CADE;;AAAA;AACdG,UAAAA,GADc;AAAA;AAAA,2CAEDhB,KAAK,CAACa,GAAN,CAAU,4BAAV,CAFC;;AAAA;AAEdN,UAAAA,IAFc;AAAA,4CAGb;AAAED,YAAAA,QAAQ,EAAEU,GAAG,CAACD,IAAhB;AAAsBR,YAAAA,IAAI,EAAEA,IAAI,CAACQ;AAAjC,WAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAMA,eAAeV,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar/NavBar';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Create from './write';\nimport Post from './post';\n\n\nfunction App({ postList, tags, auth }) {\n\n  const [posts, setPosts] = useState([]);\n  \n\n  useEffect(() => {\n    setPosts(postList);\n  }, []);\n\n  const getPostByTag = async(tag) => {\n    const res = await axios.get(`http://localhost:3001/posts/${tag}`)\n    .then((data) => setPosts(data.data))\n  }\n\n\n\n  return (\n    <div className=\"app_body\">\n     \n      <Dashboard posts={posts} tags={tags} getPostByTag={getPostByTag}/>\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}