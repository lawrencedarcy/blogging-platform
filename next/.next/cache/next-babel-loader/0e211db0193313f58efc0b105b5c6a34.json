{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/components/Card/Card.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styles from './Card.module.css';\nimport Moment from 'react-moment';\nimport Link from 'next/link';\nimport { useAuth, withAuth } from 'use-auth0-hooks';\n\nfunction Card(_ref) {\n  var _this = this;\n\n  var post = _ref.post,\n      addToList = _ref.addToList,\n      auth = _ref.auth,\n      feedState = _ref.feedState,\n      deleteFromList = _ref.deleteFromList,\n      checkReadingList = _ref.checkReadingList;\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login;\n\n  var user = auth.user;\n\n  var _useState = useState(),\n      isClicked = _useState[0],\n      setIsClicked = _useState[1]; // checkReadingList(user, post._id);\n\n\n  useEffect(function () {\n    checkList;\n  }, []);\n\n  var checkList = function checkList() {\n    var boo;\n    return _regeneratorRuntime.async(function checkList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(user);\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(checkReadingList(user, post._id));\n\n          case 4:\n            boo = _context.sent;\n            return _context.abrupt(\"return\", boo);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var clickHandler = function clickHandler(e) {\n    console.log(post._id);\n    user ? addToList(user, post._id) : login();\n    setIsClicked(true);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.card_width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.feed_card_inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/post/\".concat(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.card_link_block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 44\n    }\n  }, __jsx(\"img\", {\n    src: post.img_url,\n    className: styles.card_img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: styles.card_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, post.title), post.tags.length > 0 && __jsx(\"div\", {\n    className: styles.card_tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }\n  }, post.tags.slice(0, 3).map(function (tag) {\n    return __jsx(\"div\", {\n      className: styles.tag,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 47\n      }\n    }, '#' + tag);\n  })), __jsx(\"div\", {\n    className: styles.card_line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: styles.card_author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, post.author, \" \"), __jsx(\"div\", {\n    className: styles.card_timestamp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, __jsx(Moment, {\n    format: \"LL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }\n  }, post.timestamp))))))), __jsx(\"div\", {\n    className: styles.card_bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/post/\".concat(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.votes_bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 44\n    }\n  }, __jsx(\"img\", {\n    className: styles.card_upvote,\n    src: \"https://uploads.guim.co.uk/2020/04/15/culture.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.card_votes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 107\n    }\n  }, post.votes))), feedState === 'list' ? __jsx(\"div\", {\n    className: styles.card_btn,\n    onClick: function onClick() {\n      return deleteFromList(user, post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCDA Remove\") : __jsx(\"div\", {\n    className: isClicked ? styles.card_btn_clicked : styles.card_btn,\n    onClick: function onClick() {\n      return clickHandler();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, isClicked ? 'ðŸ“š Saved' : 'ðŸ“š Save')));\n}\n\nexport default withAuth(Card);","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/components/Card/Card.js"],"names":["React","useState","useEffect","styles","Moment","Link","useAuth","withAuth","Card","post","addToList","auth","feedState","deleteFromList","checkReadingList","login","user","isClicked","setIsClicked","checkList","_id","boo","clickHandler","e","console","log","card_width","feed_card_inner","card_link_block","img_url","card_img","card_title","title","tags","length","card_tags","slice","map","tag","card_line","card_author","author","card_timestamp","timestamp","card_bottom","votes_bottom","card_upvote","card_votes","votes","card_btn","card_btn_clicked"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport styles from './Card.module.css';\nimport Moment from 'react-moment';\nimport Link from 'next/link';\nimport { useAuth, withAuth  } from 'use-auth0-hooks';\n\nfunction Card({ post, addToList, auth, feedState, deleteFromList, checkReadingList}) {\n  \n\n  const { login} = useAuth();\n  const { user } = auth;\n  const [isClicked, setIsClicked] = useState();\n\n  // checkReadingList(user, post._id);\n\n  useEffect(() => {\n    checkList\n  }, []);\n\n  const checkList = async() => {\n    await user;\n    const boo = await checkReadingList(user, post._id);\n    return boo;\n  }\n\n  const clickHandler = (e) => {\n    console.log(post._id)\n    user ? \n    addToList(user, post._id)\n    :\n    login();\n    setIsClicked(true);\n  }\n\n \n\n  return (\n   \n    <div className={styles.card_width}>\n        \n        <div className={styles.feed_card_inner}>\n        <Link href={`/post/${post._id}`}  ><div className={styles.card_link_block}>\n          <img\n            src={post.img_url}\n            className={styles.card_img}\n          ></img>\n          <div className={styles.card_title}>{post.title}</div>\n\n          {post.tags.length > 0 && (\n             <div className={styles.card_tags}>\n            { post.tags.slice(0,3).map(tag => <div className={styles.tag}>{'#' + tag}</div>) }\n             </div>\n          )}  \n  \n          <div className={styles.card_line}>\n            <div className={styles.card_author}>{post.author} </div>\n            <div className={styles.card_timestamp}>\n              <div><Moment format=\"LL\">{post.timestamp}</Moment></div>\n            </div>\n          </div>\n          </div></Link>\n        </div>\n        <div className={styles.card_bottom}>\n        <Link href={`/post/${post._id}`}  ><div className={styles.votes_bottom}>\n        <img className={styles.card_upvote} src=\"https://uploads.guim.co.uk/2020/04/15/culture.png\"></img><div className={styles.card_votes}>{post.votes}</div>\n        </div></Link>\n        \n       \n\n        {feedState === 'list' ? \n          <div className={styles.card_btn} onClick={() => deleteFromList(user, post._id)}>ðŸ“š Remove</div>\n          :\n          <div className={isClicked ? styles.card_btn_clicked : styles.card_btn}  onClick={() => clickHandler()}>{isClicked ? 'ðŸ“š Saved' : 'ðŸ“š Save'}</div>\n        }\n        </div>\n      \n    </div>\n    \n  );\n}\n\n\n\nexport default withAuth(Card);\n"]},"metadata":{},"sourceType":"module"}