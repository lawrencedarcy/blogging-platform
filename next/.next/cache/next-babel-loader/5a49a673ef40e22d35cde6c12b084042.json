{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nfunction App({\n  postList,\n  tags,\n  auth\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: feed,\n    1: setFeed\n  } = useState('normal');\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async tag => {\n    await axios.get(`http://localhost:3001/posts/${tag}`).then(data => {\n      setPosts(data.data);\n      setFeed('tags');\n    });\n  };\n\n  const searchPosts = async term => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`).then(data => {\n      setPosts(data.data);\n      setFeed('search');\n    });\n  };\n\n  const addToList = async (user, postId) => {\n    await axios.get(`http://localhost:3001/users/${user.nickname}`).then(res => {\n      if (res.data[0]) {\n        axios.put(`http://localhost:3001/users/${user.nickname}`, {\n          reading: postId\n        });\n      } else {\n        createUser(user.nickname, postId);\n      }\n    });\n  };\n\n  const createUser = async (name, postId) => {\n    await axios.post(`http://localhost:3001/users`, {\n      name: name,\n      reading: postId\n    });\n  };\n\n  const getReadingList = async user => {\n    console.log('getting reading lsit');\n    await axios.get(`http://localhost:3001/users/${user.nickname}`).then(res => {\n      const list = res.data[0].reading;\n      console.log(list);\n      listHelper(list);\n    });\n  }; //part of get reading list and delete from list\n\n\n  const listHelper = async list => {\n    await axios.get(`http://localhost:3001/list`, {\n      params: {\n        list: list\n      }\n    }).then(res => {\n      setPosts(res.data);\n      setFeed('list');\n    });\n  };\n\n  const deleteFromList = async (user, postid) => {\n    await axios.put(`http://localhost:3001/list/${user.nickname}`, {\n      reading: postid\n    }).then(res => {\n      const list = res.data.reading;\n      listHelper(list);\n    });\n  };\n\n  const checkReadingList = async (user, postId) => {\n    return axios.get(`http://localhost:3001/users/${user.nickname}`).then(res => {\n      if (res.data[0]) {\n        const list = res.data[0].reading;\n        return list.includes(postId) ? true : false;\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    addToList: addToList,\n    searchPosts: searchPosts,\n    feedState: feed,\n    getReadingList: getReadingList,\n    deleteFromList: deleteFromList,\n    checkReadingList: checkReadingList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return {\n    postList: res.data,\n    tags: tags.data\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","useState","useEffect","axios","Dashboard","App","postList","tags","auth","posts","setPosts","feed","setFeed","getPostByTag","tag","get","then","data","searchPosts","term","addToList","user","postId","nickname","res","put","reading","createUser","name","post","getReadingList","console","log","list","listHelper","params","deleteFromList","postid","checkReadingList","includes","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nfunction App({ postList, tags, auth }) {\n  const [posts, setPosts] = useState([]);\n  const [feed, setFeed] = useState('normal');\n\n  useEffect(() => {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  const getPostByTag = async tag => {\n    await axios.get(`http://localhost:3001/posts/${tag}`).then(data => {\n      setPosts(data.data);\n      setFeed('tags');\n    });\n  };\n\n  const searchPosts = async term => {\n    await axios.get(`http://localhost:3001/posts/search/${term}`).then(data => {\n      setPosts(data.data);\n      setFeed('search');\n    });\n  };\n\n  const addToList = async (user, postId) => {\n    await axios\n      .get(`http://localhost:3001/users/${user.nickname}`)\n      .then(res => {\n        if (res.data[0]) {\n          axios.put(`http://localhost:3001/users/${user.nickname}`, {\n            reading: postId\n          });\n        } else {\n          createUser(user.nickname, postId);\n        }\n      });\n  };\n\n  const createUser = async (name, postId) => {\n    await axios.post(`http://localhost:3001/users`, {\n      name: name,\n      reading: postId\n    });\n  };\n\n  const getReadingList = async user => {\n    console.log('getting reading lsit');\n    await axios\n      .get(`http://localhost:3001/users/${user.nickname}`)\n      .then(res => {\n        const list = res.data[0].reading;\n        console.log(list);\n        listHelper(list);\n      });\n  };\n  //part of get reading list and delete from list\n  const listHelper = async list => {\n    await axios\n      .get(`http://localhost:3001/list`, { params: { list: list } })\n      .then(res => {\n        setPosts(res.data);\n        setFeed('list');\n      });\n  };\n\n  const deleteFromList = async (user, postid) => {\n    await axios\n      .put(`http://localhost:3001/list/${user.nickname}`, { reading: postid })\n      .then(res => {\n        const list = res.data.reading;\n        listHelper(list);\n      });\n  };\n\n  const checkReadingList = async (user, postId) => {\n    return axios\n      .get(`http://localhost:3001/users/${user.nickname}`)\n      .then(res => {\n        if (res.data[0]) {\n          const list = res.data[0].reading;\n          return list.includes(postId) ? true : false;\n        }\n      });\n  };\n\n  return (\n    <div className='app_body'>\n      <Dashboard\n        posts={posts}\n        tags={tags}\n        getPostByTag={getPostByTag}\n        addToList={addToList}\n        searchPosts={searchPosts}\n        feedState={feed}\n        getReadingList={getReadingList}\n        deleteFromList={deleteFromList}\n        checkReadingList={checkReadingList}\n      />\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}