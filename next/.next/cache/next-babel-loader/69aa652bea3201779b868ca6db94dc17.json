{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/secret.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport { handleAuthSSR } from '../utils/auth';\nconst serverUrl = 'http://localhost:3001'; // set up cookies\n\nconst cookies = new Cookies();\n\nclass Secret extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onPingCall\", async e => {\n      const token = cookies.get('token');\n\n      try {\n        const res = await axios.get(serverUrl + '/api/ping', {\n          headers: {\n            'Authorization': token\n          }\n        });\n        console.log(res.data.msg);\n      } catch (err) {\n        console.log(err.response.data.msg);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Secret page\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"Only accessible via a valid JWT\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), __jsx(\"button\", {\n      onClick: e => this.onPingCall(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Ping Call\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Check console for response\"));\n  }\n\n} // Server-Side Rendering\n\n\nSecret.getInitialProps = async ctx => {\n  // Must validate JWT\n  // If the JWT is invalid it must redirect\n  // back to the main page. You can do that\n  // with Router from 'next/router\n  await handleAuthSSR(ctx); // Must return an object\n\n  return {};\n};\n\nexport default Secret;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/secret.js"],"names":["React","axios","Cookies","handleAuthSSR","serverUrl","cookies","Secret","Component","e","token","get","res","headers","console","log","data","msg","err","response","render","onPingCall","getInitialProps","ctx"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,MAAMC,SAAS,GAAG,uBAAlB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;;AAEA,MAAMI,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAAA;AAAA;;AAAA,wCAEtB,MAAOC,CAAP,IAAa;AACxB,YAAMC,KAAK,GAAGJ,OAAO,CAACK,GAAR,CAAY,OAAZ,CAAd;;AAEA,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMV,KAAK,CAACS,GAAN,CAAUN,SAAS,GAAG,WAAtB,EAAmC;AAAEQ,UAAAA,OAAO,EAAE;AAAE,6BAAiBH;AAAnB;AAAX,SAAnC,CAAlB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAJ,CAASC,GAArB;AACD,OAHD,CAGE,OAAOC,GAAP,EAAY;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBC,GAA9B;AACD;AACF,KAXkC;AAAA;;AAanCG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAQ,MAAA,OAAO,EAAGX,CAAD,IAAO,KAAKY,UAAL,CAAgBZ,CAAhB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALF,CADF;AASD;;AAvBkC,C,CA0BrC;;;AACAF,MAAM,CAACe,eAAP,GAAyB,MAAOC,GAAP,IAAe;AACtC;AACA;AACA;AACA;AACA,QAAMnB,aAAa,CAACmB,GAAD,CAAnB,CALsC,CAOtC;;AACA,SAAO,EAAP;AACD,CATD;;AAWA,eAAehB,MAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport { handleAuthSSR } from '../utils/auth';\n\nconst serverUrl = 'http://localhost:3001';\n\n// set up cookies\nconst cookies = new Cookies();\n\nclass Secret extends React.Component {\n\n  onPingCall = async (e) => {\n    const token = cookies.get('token')\n\n    try {\n      const res = await axios.get(serverUrl + '/api/ping', { headers: { 'Authorization': token } });\n      console.log(res.data.msg);\n    } catch (err) {\n      console.log(err.response.data.msg);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Secret page</h2>\n        <p>Only accessible via a valid JWT</p>\n        <br></br>\n        <button onClick={(e) => this.onPingCall(e)}>Ping Call</button>\n        <p>Check console for response</p>\n      </div>\n    );\n  }\n}\n\n// Server-Side Rendering\nSecret.getInitialProps = async (ctx) => {\n  // Must validate JWT\n  // If the JWT is invalid it must redirect\n  // back to the main page. You can do that\n  // with Router from 'next/router\n  await handleAuthSSR(ctx);\n\n  // Must return an object\n  return {}\n}\n\nexport default Secret;"]},"metadata":{},"sourceType":"module"}