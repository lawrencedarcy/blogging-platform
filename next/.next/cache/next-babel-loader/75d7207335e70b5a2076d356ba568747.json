{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/components/Card/Card.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from './Card.module.css';\nimport Moment from 'react-moment';\nimport Link from 'next/link';\nimport { useAuth, withAuth } from 'use-auth0-hooks';\n\nfunction Card(_ref) {\n  var _this = this;\n\n  var post = _ref.post,\n      addToList = _ref.addToList,\n      auth = _ref.auth,\n      feedState = _ref.feedState,\n      deleteFromList = _ref.deleteFromList,\n      checkReadingList = _ref.checkReadingList;\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login;\n\n  var user = auth.user;\n\n  var _useState = useState(),\n      isClicked = _useState[0],\n      setIsClicked = _useState[1];\n\n  var clickHandler = function clickHandler(e) {\n    console.log(post._id);\n    user ? addToList(user, post._id) : login();\n    setIsClicked(true);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.card_width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.feed_card_inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/post/\".concat(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.card_link_block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 44\n    }\n  }, __jsx(\"img\", {\n    src: post.img_url,\n    className: styles.card_img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: styles.card_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, post.title), post.tags.length > 0 && __jsx(\"div\", {\n    className: styles.card_tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }\n  }, post.tags.slice(0, 3).map(function (tag) {\n    return __jsx(\"div\", {\n      className: styles.tag,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 47\n      }\n    }, '#' + tag);\n  })), __jsx(\"div\", {\n    className: styles.card_line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: styles.card_author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, post.author, \" \"), __jsx(\"div\", {\n    className: styles.card_timestamp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, __jsx(Moment, {\n    format: \"LL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }, post.timestamp))))))), __jsx(\"div\", {\n    className: styles.card_bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/post/\".concat(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.votes_bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }\n  }, __jsx(\"img\", {\n    className: styles.card_upvote,\n    src: \"https://uploads.guim.co.uk/2020/04/15/culture.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.card_votes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 107\n    }\n  }, post.votes))), feedState === 'list' ? __jsx(\"div\", {\n    className: styles.card_btn,\n    onClick: function onClick() {\n      return deleteFromList(user, post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCDA Remove\") : __jsx(\"div\", {\n    className: isClicked ? styles.card_btn_clicked : styles.card_btn,\n    onClick: function onClick() {\n      return clickHandler();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, isClicked ? 'ðŸ“š Saved' : 'ðŸ“š Save')));\n}\n\nCard.getInitialProps = function _callee(ctx) {\n  var res, tags;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/tags'));\n\n        case 5:\n          tags = _context.sent;\n          return _context.abrupt(\"return\", {\n            postList: res.data,\n            tags: tags.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default withAuth(Card);","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/components/Card/Card.js"],"names":["React","useState","styles","Moment","Link","useAuth","withAuth","Card","post","addToList","auth","feedState","deleteFromList","checkReadingList","login","user","isClicked","setIsClicked","clickHandler","e","console","log","_id","card_width","feed_card_inner","card_link_block","img_url","card_img","card_title","title","tags","length","card_tags","slice","map","tag","card_line","card_author","author","card_timestamp","timestamp","card_bottom","votes_bottom","card_upvote","card_votes","votes","card_btn","card_btn_clicked","getInitialProps","ctx","axios","get","res","postList","data"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\nimport styles from './Card.module.css';\nimport Moment from 'react-moment';\nimport Link from 'next/link';\nimport { useAuth, withAuth  } from 'use-auth0-hooks';\n\nfunction Card({ post, addToList, auth, feedState, deleteFromList, checkReadingList }) {\n \n  const { login} = useAuth();\n  const { user } = auth;\n  const [isClicked, setIsClicked] = useState();\n\n\n  const clickHandler = (e) => {\n    console.log(post._id)\n    user ? \n    addToList(user, post._id)\n    :\n    login();\n    setIsClicked(true);\n  }\n\n  return (\n   \n    <div className={styles.card_width}>\n        \n        <div className={styles.feed_card_inner}>\n        <Link href={`/post/${post._id}`}  ><div className={styles.card_link_block}>\n          <img\n            src={post.img_url}\n            className={styles.card_img}\n          ></img>\n          <div className={styles.card_title}>{post.title}</div>\n\n          {post.tags.length > 0 && (\n             <div className={styles.card_tags}>\n            { post.tags.slice(0,3).map(tag => <div className={styles.tag}>{'#' + tag}</div>) }\n             </div>\n          )}  \n  \n          <div className={styles.card_line}>\n            <div className={styles.card_author}>{post.author} </div>\n            <div className={styles.card_timestamp}>\n              <div><Moment format=\"LL\">{post.timestamp}</Moment></div>\n            </div>\n          </div>\n          </div></Link>\n        </div>\n        <div className={styles.card_bottom}>\n        <Link href={`/post/${post._id}`}  ><div className={styles.votes_bottom}>\n        <img className={styles.card_upvote} src=\"https://uploads.guim.co.uk/2020/04/15/culture.png\"></img><div className={styles.card_votes}>{post.votes}</div>\n        </div></Link>\n       {feedState === 'list' ? \n          <div className={styles.card_btn} onClick={() => deleteFromList(user, post._id)}>ðŸ“š Remove</div>\n          :\n          <div className={isClicked ? styles.card_btn_clicked : styles.card_btn}  onClick={() => clickHandler()}>{isClicked ? 'ðŸ“š Saved' : 'ðŸ“š Save'}</div>\n        }\n        </div>\n      \n    </div>\n    \n  );\n}\n\nCard.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags');\n  return { postList: res.data, tags: tags.data };\n};\n\nexport default withAuth(Card);\n"]},"metadata":{},"sourceType":"module"}