{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nfunction App(_ref) {\n  var postList = _ref.postList,\n      tags = _ref.tags,\n      auth = _ref.auth;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState('normal'),\n      feed = _useState2[0],\n      setFeed = _useState2[1];\n\n  useEffect(function () {\n    setPosts(postList);\n    setFeed('normal');\n  }, []);\n\n  var getPostByTag = function getPostByTag(tag) {\n    return _regeneratorRuntime.async(function getPostByTag$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/\".concat(tag)).then(function (data) {\n              setPosts(data.data);\n              setFeed('tags');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var searchPosts = function searchPosts(term) {\n    return _regeneratorRuntime.async(function searchPosts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/posts/search/\".concat(term)).then(function (data) {\n              setPosts(data.data);\n              setFeed('search');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addToList = function addToList(user, post) {\n    return _regeneratorRuntime.async(function addToList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(user.nickname, post);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              if (res.data[0]) {\n                axios.put(\"http://localhost:3001/users/\".concat(user.nickname), {\n                  reading: post\n                });\n              } else {\n                createUser(user.nickname, post);\n              }\n            }));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createUser = function createUser(name, post) {\n    return _regeneratorRuntime.async(function createUser$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:3001/users\", {\n              name: name,\n              reading: post\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getReadingList = function getReadingList(user) {\n    return _regeneratorRuntime.async(function getReadingList$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              var list = res.data[0].reading;\n              listHelper(list);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }; //part of get reading list and delete from list\n\n\n  var listHelper = function listHelper(list) {\n    return _regeneratorRuntime.async(function listHelper$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/list\", {\n              params: {\n                list: list\n              }\n            }).then(function (res) {\n              setPosts(res.data);\n              setFeed('list');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteFromList = function deleteFromList(user, postid) {\n    return _regeneratorRuntime.async(function deleteFromList$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(axios.put(\"http://localhost:3001/list/\".concat(user.nickname), {\n              reading: postid\n            }).then(function (res) {\n              var list = res.data.reading;\n              listHelper(list);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkReadingList = function checkReadingList(user, postId) {\n    return _regeneratorRuntime.async(function checkReadingList$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", axios.get(\"http://localhost:3001/users/\".concat(user.nickname)).then(function (res) {\n              var list = res.data[0].reading;\n              console.log('checked the list!', list.includes(postId) ? true : false);\n              return list.includes(postId) ? true : false;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\"\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    getPostByTag: getPostByTag,\n    addToList: addToList,\n    searchPosts: searchPosts,\n    feedState: feed,\n    getReadingList: getReadingList,\n    deleteFromList: deleteFromList,\n    checkReadingList: checkReadingList\n  }));\n}\n\nApp.getInitialProps = function _callee(ctx) {\n  var res, tags;\n  return _regeneratorRuntime.async(function _callee$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context9.sent;\n          _context9.next = 5;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/tags'));\n\n        case 5:\n          tags = _context9.sent;\n          return _context9.abrupt(\"return\", {\n            postList: res.data,\n            tags: tags.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}