{"ast":null,"code":"var _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/components/Feed/Feed.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '../Card/Card';\nimport styles from './Feed.module.css';\nimport FeedHeader from './FeedHeader';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nfunction Feed({\n  posts,\n  feedState,\n  addToList,\n  deleteFromList,\n  checkReadingList\n}) {\n  let numPosts = 4;\n\n  const addPosts = () => numPosts = numPosts + 4;\n\n  const sortedList = posts.sort(function (a, b) {\n    a = a.votes;\n    b = b.votes;\n    return a > b ? -1 : a < b ? 1 : 0;\n  });\n  const {\n    0: postList,\n    1: setPostList\n  } = useState(sortedList);\n\n  const loadPosts = () => {};\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, feedState === 'tags' && __jsx(FeedHeader, {\n    filter: 'tags',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }\n  }), feedState === 'search' && __jsx(FeedHeader, {\n    filter: 'search',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }\n  }), feedState === 'list' && __jsx(FeedHeader, {\n    filter: 'list',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 32\n    }\n  }), __jsx(InfiniteScroll, {\n    dataLength: 15 //This is important field to render the next data\n    ,\n    next: addPosts(),\n    hasMore: true,\n    loader: __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Loading...\"),\n    endMessage: __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, \"You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, sortedList.slice(0, numPosts).map(post => __jsx(\"div\", {\n    className: styles.feed_card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    key: post.id,\n    post: post,\n    addToList: addToList,\n    feedState: feedState,\n    deleteFromList: deleteFromList,\n    checkReadingList: checkReadingList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default Feed;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/components/Feed/Feed.js"],"names":["React","useState","Card","styles","FeedHeader","InfiniteScroll","Feed","posts","feedState","addToList","deleteFromList","checkReadingList","numPosts","addPosts","sortedList","sort","a","b","votes","postList","setPostList","loadPosts","textAlign","slice","map","post","feed_card","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAIA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA,cAA/B;AAA+CC,EAAAA;AAA/C,CAAd,EAAiF;AAEhF,MAAIC,QAAQ,GAAG,CAAf;;AACA,QAAMC,QAAQ,GAAG,MAAMD,QAAQ,GAAIA,QAAQ,GAAE,CAA7C;;AAEC,QAAME,UAAU,GAAGP,KAAK,CAACQ,IAAN,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC3CD,IAAAA,CAAC,GAAGA,CAAC,CAACE,KAAN;AACAD,IAAAA,CAAC,GAAGA,CAAC,CAACC,KAAN;AACA,WAAOF,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAaD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACD,GAJkB,CAAnB;AAMA,QAAM;AAAA,OAACE,QAAD;AAAA,OAAWC;AAAX,MAA0BnB,QAAQ,CAACa,UAAD,CAAxC;;AAEA,QAAMO,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,SAAS,KAAK,MAAd,IAAwB,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD3B,EAEGA,SAAS,KAAK,QAAd,IAA0B,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF7B,EAGGA,SAAS,KAAK,MAAd,IAAwB,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH3B,EAKE,MAAC,cAAD;AACJ,IAAA,UAAU,EAAE,EADR,CACY;AADZ;AAEJ,IAAA,IAAI,EAAEK,QAAQ,EAFV;AAGJ,IAAA,OAAO,EAAE,IAHL;AAIJ,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAKJ,IAAA,UAAU,EACR;AAAG,MAAA,KAAK,EAAE;AAACS,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaCR,UAAU,CAACS,KAAX,CAAiB,CAAjB,EAAoBX,QAApB,EAA8BY,GAA9B,CAAkCC,IAAI,IACrC;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACuB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,GAAG,EAAED,IAAI,CAACE,EADZ;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,SAAS,EAAEhB,SAHb;AAIE,IAAA,SAAS,EAAED,SAJb;AAKE,IAAA,cAAc,EAAEE,cALlB;AAME,IAAA,gBAAgB,EAAEC,gBANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CAbD,CALF,CADF;AAoCD;;AAED,eAAeL,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport Card from '../Card/Card';\nimport styles from './Feed.module.css';\nimport FeedHeader from './FeedHeader';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\n\n\nfunction Feed({ posts, feedState, addToList, deleteFromList, checkReadingList }) {\n  \n let numPosts = 4;\n const addPosts = () => numPosts = (numPosts +4);\n\n  const sortedList = posts.sort(function(a, b) {\n    a = a.votes;\n    b = b.votes;\n    return a > b ? -1 : a < b ? 1 : 0;\n  });\n\n  const [postList, setPostList] = useState(sortedList)\n\n  const loadPosts = () => {\n\n  }\n\n  return (\n    <div>\n      {feedState === 'tags' && <FeedHeader filter={'tags'} />}\n      {feedState === 'search' && <FeedHeader filter={'search'} />}\n      {feedState === 'list' && <FeedHeader filter={'list'} />}\n\n      <InfiniteScroll\n  dataLength={15} //This is important field to render the next data\n  next={addPosts()}\n  hasMore={true}\n  loader={<h4>Loading...</h4>}\n  endMessage={\n    <p style={{textAlign: 'center'}}>\n      <b>You have seen it all</b>\n    </p>\n  }>\n\n\n\n      {sortedList.slice(0, numPosts).map(post => (\n        <div className={styles.feed_card}>\n          <Card\n            key={post.id}\n            post={post}\n            addToList={addToList}\n            feedState={feedState}\n            deleteFromList={deleteFromList}\n            checkReadingList={checkReadingList}\n          />\n        </div>\n\n      ))}\n      </InfiniteScroll>\n\n    </div>\n  );\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}