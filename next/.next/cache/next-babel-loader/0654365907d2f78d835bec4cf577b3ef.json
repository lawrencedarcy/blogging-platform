{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar/NavBar';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Create from './write';\nimport Post from './post';\n\nfunction App(_ref) {\n  var posts = _ref.posts,\n      tags = _ref.tags;\n\n  var findPost = function findPost(url) {\n    var res = posts.filter(function (post) {\n      return post.title && post.title.replace(/\\s/g, '-').toLowerCase() === url;\n    });\n    console.log('foundpost', res[0]);\n    return res[0];\n  };\n\n  return __jsx(\"div\", {\n    className: \"app_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Dashboard, {\n    posts: posts,\n    tags: tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = function _callee(ctx) {\n  var res, tags;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/tags').then(new Set(tags)));\n\n        case 5:\n          tags = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: res.data,\n            tags: tags.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","axios","NavBar","Dashboard","Create","Post","App","posts","tags","findPost","url","res","filter","post","title","replace","toLowerCase","console","log","getInitialProps","ctx","get","then","Set","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,SAASC,GAAT,OAA8B;AAAA,MAAfC,KAAe,QAAfA,KAAe;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAC5B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG,EAAI;AACtB,QAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CACV,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,EAA+BC,WAA/B,OAAiDN,GAAnE;AAAA,KADM,CAAZ;AAGAO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,GAAG,CAAC,CAAD,CAA5B;AACA,WAAOA,GAAG,CAAC,CAAD,CAAV;AACD,GAND;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,KAAlB;AAAyB,IAAA,IAAI,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAEDF,GAAG,CAACa,eAAJ,GAAsB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFnB,KAAK,CAACoB,GAAN,CAAU,6BAAV,CADE;;AAAA;AACdV,UAAAA,GADc;AAAA;AAAA,2CAEDV,KAAK,CAACoB,GAAN,CAAU,4BAAV,EACnBC,IADmB,CAEjB,IAAIC,GAAJ,CAAQf,IAAR,CAFiB,CAFC;;AAAA;AAEdA,UAAAA,IAFc;AAAA,2CAMb;AAAED,YAAAA,KAAK,EAAEI,GAAG,CAACa,IAAb;AAAmBhB,YAAAA,IAAI,EAAEA,IAAI,CAACgB;AAA9B,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AASA,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar/NavBar';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Create from './write';\nimport Post from './post';\n\n\nfunction App({ posts, tags }) {\n  const findPost = url => {\n    const res = posts.filter(\n      post => post.title && post.title.replace(/\\s/g, '-').toLowerCase() === url\n    );\n    console.log('foundpost', res[0]);\n    return res[0];\n  };\n\n\n\n  return (\n    <div className=\"app_body\">\n     \n      <Dashboard posts={posts} tags={tags} />\n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => {\n  const res = await axios.get('http://localhost:3001/posts');\n  const tags = await axios.get('http://localhost:3001/tags')\n .then(\n    new Set(tags)\n )\n  return { posts: res.data, tags: tags.data };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}