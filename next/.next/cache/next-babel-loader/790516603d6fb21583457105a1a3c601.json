{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar/NavBar';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Create from './write';\nimport Article from './article';\n\nfunction App(_ref) {\n  var posts = _ref.posts;\n\n  var findPost = function findPost(url) {\n    var res = posts.filter(function (post) {\n      return post.title && post.title.replace(/\\s/g, '-').toLowerCase() === url;\n    });\n    console.log('foundpost', res[0]);\n    return res[0];\n  };\n\n  var upVote = function upVote(id) {\n    axios.put(\"http://localhost:3001/posts/\".concat(id, \"/up\")).then(function (res) {\n      console.log(res.data);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"app-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(Dashboard, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\n\nApp.getInitialProps = function _callee(ctx) {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/posts'));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: res.data\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/index.js"],"names":["React","axios","NavBar","Dashboard","Create","Article","App","posts","findPost","url","res","filter","post","title","replace","toLowerCase","console","log","upVote","id","put","then","data","error","getInitialProps","ctx","get"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,SAASC,GAAT,OAAsB;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAEpB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AACxB,QAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,EAA+BC,WAA/B,OAAiDN,GAAnE;AAAA,KAAjB,CAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,GAAG,CAAC,CAAD,CAA5B;AACA,WAAOA,GAAG,CAAC,CAAD,CAAV;AACD,GAJD;;AAMA,MAAMQ,MAAM,GAAG,SAATA,MAAS,CAACC,EAAD,EAAQ;AACrBlB,IAAAA,KAAK,CAACmB,GAAN,uCAAyCD,EAAzC,UACCE,IADD,CACM,UAAUX,GAAV,EAAe;AACnBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACY,IAAhB;AACD,KAHD,WAIO,UAAUC,KAAV,EAAiB;AACtBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KAND;AAOD,GARD;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEhB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD;;AAEDD,GAAG,CAACkB,eAAJ,GAAsB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFxB,KAAK,CAACyB,GAAN,CAAU,6BAAV,CADE;;AAAA;AACdhB,UAAAA,GADc;AAAA,2CAEb;AAACH,YAAAA,KAAK,EAAEG,GAAG,CAACY;AAAZ,WAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAKA,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar/NavBar';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Create from './write';\n\nimport Article from './article'\n\n\nfunction App({posts}) {\n\n  const findPost = (url) => {\n    const res = posts.filter(post => post.title && post.title.replace(/\\s/g, '-').toLowerCase() === url);\n    console.log('foundpost', res[0])\n    return res[0];\n  }\n\n  const upVote = (id) => {\n    axios.put(`http://localhost:3001/posts/${id}/up`)\n    .then(function (res) {\n      console.log(res.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n  }\n\n  return (\n    <div className=\"app-body\">\n      <NavBar />    \n      <Dashboard posts={posts}/>\n  \n    </div>\n  );\n}\n\nApp.getInitialProps = async ctx => { \n  const res = await axios.get('http://localhost:3001/posts');\n  return {posts: res.data};\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}