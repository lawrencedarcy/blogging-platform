{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/post/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Footer from '../../components/Article/Footer/Footer';\nimport axios from 'axios';\nimport { Markup } from 'interweave';\nimport { DiscussionEmbed } from 'disqus-react';\n\nfunction Post(_ref) {\n  var _this = this;\n\n  var post = _ref.post;\n\n  var upVote = function upVote(id) {\n    axios.put(\"http://localhost:3001/posts/\".concat(id, \"/up\")).then(function (res) {\n      console.log(res.data);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"whitespace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"body_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"article_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(\"div\", {\n    className: \"article_author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, post.author), __jsx(\"div\", {\n    className: \"article_tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, post.tags.slice(0, 3).map(function (tag) {\n    return __jsx(\"div\", {\n      className: \"article_tag\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"#\", tag);\n  })), __jsx(\"div\", {\n    className: \"article_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Markup, {\n    content: post.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"article_disqus\",\n    id: \"disqus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(DiscussionEmbed, {\n    shortname: \"stagetime\",\n    config: ({\n      url: post.id\n    }, {\n      identifier: post.id\n    }, {\n      title: post.title\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }))), __jsx(Footer, {\n    upVote: upVote,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\n\nPost.getInitialProps = function _callee(_ref2) {\n  var query, res, result;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3001/post/\".concat(query.id)));\n\n        case 3:\n          res = _context.sent;\n          result = res.data;\n          console.log(result);\n          return _context.abrupt(\"return\", {\n            post: result\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/lawrence_wakefield/Documents/Development/codeworks/final-project/blogging-platform/next/pages/post/[id].js"],"names":["React","Footer","axios","Markup","DiscussionEmbed","Post","post","upVote","id","put","then","res","console","log","data","error","title","author","tags","slice","map","tag","body","url","identifier","getInitialProps","query","get","result"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Footer from '../../components/Article/Footer/Footer';\nimport axios from 'axios';\nimport { Markup } from 'interweave';\nimport { DiscussionEmbed } from 'disqus-react';\n\nfunction Post({ post }) {\n  const upVote = id => {\n    axios\n      .put(`http://localhost:3001/posts/${id}/up`)\n      .then(function(res) {\n        console.log(res.data);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <div className='whitespace'></div>\n\n      <div className='body_wrapper'>\n        <div className='article_title'>{post.title}</div>\n        <div className='article_author'>{post.author}</div>\n        <div className='article_tags'>\n          {post.tags.slice(0, 3).map(tag => (\n            <div className='article_tag'>#{tag}</div>\n          ))}\n        </div>\n        <div className='article_body'>\n          <Markup content={post.body} />\n\n          <div className='article_disqus' id='disqus'>\n            <DiscussionEmbed\n              shortname='stagetime'\n              config={\n                ({ url: post.id },\n                { identifier: post.id },\n                { title: post.title })\n              }\n            />\n          </div>\n        </div>\n        <Footer upVote={upVote} post={post} />\n      </div>\n    </div>\n  );\n}\n\nPost.getInitialProps = async ({ query }) => {\n  const res = await axios.get(`http://localhost:3001/post/${query.id}`);\n  const result = res.data;\n  console.log(result);\n  return { post: result };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}